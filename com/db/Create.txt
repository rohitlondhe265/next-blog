CREATE SCHEMA `rdl-blog` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

USE `rdl-blog`;

CREATE TABLE `rdl-blog`.`user` (
  `id` VARCHAR(300) NOT NULL,
  `email` VARCHAR(75) NOT NULL,
  `hashedPassword` VARCHAR(90) NOT NULL,
  `role` ENUM ('User', 'Teacher', 'Admin') DEFAULT 'User',
  `firstName` VARCHAR(30) NULL DEFAULT NULL,
  `lastName` VARCHAR(30) NULL DEFAULT NULL,
  `profile` varchar(255) NULL,
  `mobile` VARCHAR(15) NULL,
  `registeredAt` TIMESTAMP DEFAULT current_timestamp,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_mobile` (`mobile` ASC),
  UNIQUE INDEX `uq_email` (`email` ASC) );

CREATE TABLE `rdl-blog`.`post` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(75) NOT NULL,
  `content` TEXT NOT NULL,
  `status` ENUM ('Draft', 'Public', 'Private') DEFAULT 'Draft',
  `thumbnail` VARCHAR(255) NULL,
  `metaTitle` VARCHAR(100) NULL,
  `slug` VARCHAR(100) NULL,
  `createdAt` timestamp default current_timestamp,
  `updatedAt` datetime default current_timestamp on update current_timestamp,
  `parentId` INT UNSIGNED NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_slug` (`slug` ASC),
  INDEX `idx_post_parent` (`parentId` ASC),
  CONSTRAINT `fk_post_parent`
    FOREIGN KEY (`parentId`)
    REFERENCES `rdl-blog`.`post` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE );

CREATE TABLE `rdl-blog`.`post_meta` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `postId` INT UNSIGNED NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  `content` VARCHAR(600) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `idx_post_meta` (`postId` ASC),
  UNIQUE INDEX `uq_post_meta` (`postId` ASC, `name` ASC),
  CONSTRAINT `fk_metaData`
    FOREIGN KEY (`postId`)
    REFERENCES `rdl-blog`.`post` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE );

CREATE TABLE `rdl-blog`.`post_comment` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `postId` INT UNSIGNED NOT NULL,
  `userId` VARCHAR(300) NOT NULL,
  `parentId` INT UNSIGNED NULL DEFAULT NULL,
  `content` VARCHAR(450) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `idx_comment_post` (`postId` ASC),
  INDEX `idx_comment_parent` (`parentId` ASC),
  CONSTRAINT `fk_comment_post`
    FOREIGN KEY (`postId`)
    REFERENCES `rdl-blog`.`post` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_comment_user`
    FOREIGN KEY (`userId`)
    REFERENCES `rdl-blog`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_comment_parent`
    FOREIGN KEY (`parentId`)
    REFERENCES `rdl-blog`.`post_comment` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE );

CREATE TABLE `rdl-blog`.`category` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `parentCategoryId` INT UNSIGNED NULL DEFAULT NULL,
  `title` VARCHAR(75) NOT NULL,
  `metaTitle` VARCHAR(120) NULL DEFAULT NULL,
  `description` VARCHAR(300) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `idx_category_parent` (`parentCategoryId` ASC),
  INDEX `idx_category_title` (`title` ASC),
  CONSTRAINT `fk_category_parent`
    FOREIGN KEY (`parentCategoryId`)
    REFERENCES `rdl-blog`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE );

CREATE TABLE `rdl-blog`.`post_category` (
  `postId` INT UNSIGNED NOT NULL,
  `categoryId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`postId`, `categoryId`),
  INDEX `idx_pc_category` (`categoryId` ASC),
  INDEX `idx_pc_post` (`postId` ASC),
  CONSTRAINT `fk_pc_post`
    FOREIGN KEY (`postId`)
    REFERENCES `rdl-blog`.`post` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_pc_category`
    FOREIGN KEY (`categoryId`)
    REFERENCES `rdl-blog`.`category` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE );

CREATE TABLE `rdl-blog`.`tag` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(60) NOT NULL,
  `metaTitle` VARCHAR(90) NULL DEFAULT NULL,
  `description` VARCHAR(270) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) );

CREATE TABLE `rdl-blog`.`post_tag` (
  `postId` INT UNSIGNED NOT NULL,
  `tagId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`postId`, `tagId`),
  INDEX `idx_pt_tag` (`tagId` ASC),
  INDEX `idx_pt_post` (`postId` ASC),
  CONSTRAINT `fk_pt_post`
    FOREIGN KEY (`postId`)
    REFERENCES `rdl-blog`.`post` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_pt_tag`
    FOREIGN KEY (`tagId`)
    REFERENCES `rdl-blog`.`tag` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE );